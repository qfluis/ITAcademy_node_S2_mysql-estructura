-- MySQL Script generated by MySQL Workbench
-- Mon Apr  4 10:31:04 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube_aliexpress_BD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema youtube_aliexpress_BD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube_aliexpress_BD` DEFAULT CHARACTER SET utf8 ;
USE `youtube_aliexpress_BD` ;

-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`usuarios` (
  `idusuario` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(60) NULL,
  `password` VARCHAR(45) NULL,
  `username` VARCHAR(45) NULL,
  `fecha_nacimiento` DATETIME NULL,
  `genero` ENUM('hombre', 'mujer', 'no indicado') NULL,
  `pais` VARCHAR(45) NULL,
  `cp` VARCHAR(12) NULL,
  PRIMARY KEY (`idusuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`canales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`canales` (
  `idcanal` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(90) NULL,
  `fecha_creacion` DATETIME NULL,
  `usuarios_idusuario` INT NOT NULL,
  PRIMARY KEY (`idcanal`),
  INDEX `fk_canales_usuarios1_idx` (`usuarios_idusuario` ASC) VISIBLE,
  CONSTRAINT `fk_canales_usuarios1`
    FOREIGN KEY (`usuarios_idusuario`)
    REFERENCES `youtube_aliexpress_BD`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`videos` (
  `idvideo` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(60) NULL,
  `descripcion` VARCHAR(120) NULL,
  `tamano` INT NULL,
  `nombre_archivo` VARCHAR(90) NULL,
  `duracion` TIME NULL,
  `thumbnail_url` VARCHAR(90) NULL,
  `fecha_hora_publicacion` TIMESTAMP NULL,
  `reproducciones` INT NULL,
  `likes` INT NULL,
  `dislikes` INT NULL,
  `estado` ENUM('publico', 'oculto', 'privado') NULL,
  `usuarios_idusuario` INT NOT NULL,
  `canales_idcanal` INT NOT NULL,
  PRIMARY KEY (`idvideo`),
  INDEX `fk_videos_usuarios_idx` (`usuarios_idusuario` ASC) VISIBLE,
  INDEX `fk_videos_canales1_idx` (`canales_idcanal` ASC) VISIBLE,
  CONSTRAINT `fk_videos_usuarios`
    FOREIGN KEY (`usuarios_idusuario`)
    REFERENCES `youtube_aliexpress_BD`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_videos_canales1`
    FOREIGN KEY (`canales_idcanal`)
    REFERENCES `youtube_aliexpress_BD`.`canales` (`idcanal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`etiquetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`etiquetas` (
  `idetiqueta` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idetiqueta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`etiquetas_video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`etiquetas_video` (
  `idetiqueta_video` INT NOT NULL AUTO_INCREMENT,
  `etiquetas_idetiqueta` INT NOT NULL,
  `videos_idvideo` INT NOT NULL,
  PRIMARY KEY (`idetiqueta_video`),
  INDEX `fk_etiquetas_video_etiquetas1_idx` (`etiquetas_idetiqueta` ASC) VISIBLE,
  INDEX `fk_etiquetas_video_videos1_idx` (`videos_idvideo` ASC) VISIBLE,
  CONSTRAINT `fk_etiquetas_video_etiquetas1`
    FOREIGN KEY (`etiquetas_idetiqueta`)
    REFERENCES `youtube_aliexpress_BD`.`etiquetas` (`idetiqueta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_etiquetas_video_videos1`
    FOREIGN KEY (`videos_idvideo`)
    REFERENCES `youtube_aliexpress_BD`.`videos` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`subscripciones_canal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`subscripciones_canal` (
  `subscripcion_canal` INT NOT NULL AUTO_INCREMENT,
  `canales_idcanal` INT NOT NULL,
  `usuarios_idusuario` INT NOT NULL,
  PRIMARY KEY (`subscripcion_canal`),
  INDEX `fk_subscripciones_canal_canales1_idx` (`canales_idcanal` ASC) VISIBLE,
  INDEX `fk_subscripciones_canal_usuarios1_idx` (`usuarios_idusuario` ASC) VISIBLE,
  CONSTRAINT `fk_subscripciones_canal_canales1`
    FOREIGN KEY (`canales_idcanal`)
    REFERENCES `youtube_aliexpress_BD`.`canales` (`idcanal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_subscripciones_canal_usuarios1`
    FOREIGN KEY (`usuarios_idusuario`)
    REFERENCES `youtube_aliexpress_BD`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`likes_dislikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`likes_dislikes` (
  `idlike_dislike` INT NOT NULL AUTO_INCREMENT,
  `tipo` ENUM('like', 'dislike') NULL,
  `fecha_like_dislike` TIMESTAMP NULL,
  `usuarios_idusuario` INT NOT NULL,
  `videos_idvideo` INT NOT NULL,
  PRIMARY KEY (`idlike_dislike`),
  INDEX `fk_likes_dislikes_usuarios1_idx` (`usuarios_idusuario` ASC) VISIBLE,
  INDEX `fk_likes_dislikes_videos1_idx` (`videos_idvideo` ASC) VISIBLE,
  CONSTRAINT `fk_likes_dislikes_usuarios1`
    FOREIGN KEY (`usuarios_idusuario`)
    REFERENCES `youtube_aliexpress_BD`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_likes_dislikes_videos1`
    FOREIGN KEY (`videos_idvideo`)
    REFERENCES `youtube_aliexpress_BD`.`videos` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`playlists` (
  `idplaylist` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `fecha_creacion` TIMESTAMP NULL,
  `estado` ENUM('publica', 'privada') NULL,
  PRIMARY KEY (`idplaylist`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`comentarios` (
  `idcomentario` INT NOT NULL AUTO_INCREMENT,
  `texto` VARCHAR(120) NULL,
  `fecha_hora` TIMESTAMP NULL,
  `usuarios_idusuario` INT NOT NULL,
  `videos_idvideo` INT NOT NULL,
  PRIMARY KEY (`idcomentario`),
  INDEX `fk_comentarios_usuarios1_idx` (`usuarios_idusuario` ASC) VISIBLE,
  INDEX `fk_comentarios_videos1_idx` (`videos_idvideo` ASC) VISIBLE,
  CONSTRAINT `fk_comentarios_usuarios1`
    FOREIGN KEY (`usuarios_idusuario`)
    REFERENCES `youtube_aliexpress_BD`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentarios_videos1`
    FOREIGN KEY (`videos_idvideo`)
    REFERENCES `youtube_aliexpress_BD`.`videos` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`likes_dislikes_comentarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`likes_dislikes_comentarios` (
  `idlike_dislike_comentario` INT NOT NULL AUTO_INCREMENT,
  `tipo` ENUM('like', 'dislike') NULL,
  `fecha` DATETIME NULL,
  `comentarios_idcomentario` INT NOT NULL,
  `usuarios_idusuario` INT NOT NULL,
  PRIMARY KEY (`idlike_dislike_comentario`),
  INDEX `fk_likes_dislikes_comentarios_comentarios1_idx` (`comentarios_idcomentario` ASC) VISIBLE,
  INDEX `fk_likes_dislikes_comentarios_usuarios1_idx` (`usuarios_idusuario` ASC) VISIBLE,
  CONSTRAINT `fk_likes_dislikes_comentarios_comentarios1`
    FOREIGN KEY (`comentarios_idcomentario`)
    REFERENCES `youtube_aliexpress_BD`.`comentarios` (`idcomentario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_likes_dislikes_comentarios_usuarios1`
    FOREIGN KEY (`usuarios_idusuario`)
    REFERENCES `youtube_aliexpress_BD`.`usuarios` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube_aliexpress_BD`.`items_playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube_aliexpress_BD`.`items_playlist` (
  `iditem_playlist` INT NOT NULL AUTO_INCREMENT,
  `playlists_idplaylist` INT NOT NULL,
  `videos_idvideo` INT NOT NULL,
  PRIMARY KEY (`iditem_playlist`),
  INDEX `fk_items_playlist_playlists1_idx` (`playlists_idplaylist` ASC) VISIBLE,
  INDEX `fk_items_playlist_videos1_idx` (`videos_idvideo` ASC) VISIBLE,
  CONSTRAINT `fk_items_playlist_playlists1`
    FOREIGN KEY (`playlists_idplaylist`)
    REFERENCES `youtube_aliexpress_BD`.`playlists` (`idplaylist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_items_playlist_videos1`
    FOREIGN KEY (`videos_idvideo`)
    REFERENCES `youtube_aliexpress_BD`.`videos` (`idvideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
